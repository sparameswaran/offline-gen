# offline-gen-input-params

# Default github path to pull down raw content
github_raw_content: raw.githubusercontent.com # Github url to retreive raw content for any associated repos referred by the pipeline

# Target pipeline details - EDIT ME
target_pipeline_name: install-nsx-t
target_pipeline_uri: https://github.com/sparameswaran/nsx-t-gen
target_pipeline_branch: master
pipeline: pipelines/nsx-t-install.yml   # Relative path to the target pipeline file from within the target pipeline repo
repo: workspace/nsx-t-gen                    # Path to the target pipeline repo if its local

# Run Id - EDIT ME
run_name: install-nsx-t-run-1                         # Unique identifier to distinguish the run

# Concourse Login/auth
concourse_team: basic
concourse_password: concourse
concourse_username: concourse

# Change parameters in blobstore upload and final generated offline pipeline s3 source to be s3_blobstore_parameterized_tokens
# for porting across S3 blobstore_source. This will allow replacement of actual s3 configs to parameterized list
# Sample generated S3 source
#source: {access_key_id: my_access_id, bucket: offline-bucket, endpoint: 'http://10.85.24.5:9000/',
#    regexp: test1/resources/docker/czero-cflinuxfs2-latest-docker.(.*), secret_access_key: my_secret_access_key}
# Modified to
#source: {access_key_id: ((final_s3_access_key_id)), bucket: ((final_s3_bucket)), endpoint: ((final_s3_endpoint)),
#  regexp: test1/resources/docker/czero-cflinuxfs2-latest-docker.(.*), secret_access_key: ((final_s3_secret_access_key))}
#

# Setting following flag to true will make both blob-upload and offline pipeline would refer to s3 stubbed values described below
# Set it to false and then the same s3 blobstore used by offline-gen would be used in all s3 source references
parameterize_s3_bucket_params: "true"
s3_blobstore_parameterized_tokens:
  endpoint: final_s3_endpoint
  bucket: final_s3_bucket
  access_key_id: final_s3_access_key_id
  secret_access_key: final_s3_secret_access_key
  # Add any additional parameter that needs to be overriden from generated s3 source

# S3 blobstore details
# This would be used by the offline-gen to save its artifacts
# Add any aditional parameter required like region or ssl or v2 signing
# and update also in the kickoff-offline-gen-pipeline.yml
# Following is <param-name>: &alias <param-value>
# EDIT the param-value section
offline_gen_s3_endpoint: &my_s3_endpoint http://10.85.24.5:9000/                   # EDIT ME
offline_gen_s3_bucket: &my_s3_bucket offline-bucket                                # EDIT ME
offline_gen_s3_access_key_id: &my_s3_access_key_id my_access_id                    # EDIT ME
offline_gen_s3_secret_access_key: &my_s3_secret_access_key my_secret_access_key    # EDIT ME

# S3 blobstore for actual generated pipelines
s3_blobstore:
  endpoint: *my_s3_endpoint
  bucket: *my_s3_bucket
  access_key_id: *my_s3_access_key_id
  secret_access_key: *my_s3_secret_access_key
  # Add any additional parameter
  #disable_ssl: true
  #skip_ssl_verification: true
  #use_v2_signing: true
