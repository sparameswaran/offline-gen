
jobs:
- name: offline-gen-build-git-repos
  plan:
  - aggregate:
    - get: offline-gen-pipeline
    - get: target-pipeline

  - config:
      image_resource:
        source: {repository: nsxedgegen/offline-gen-worker}
        type: docker-image
      inputs:
      - name: offline-gen-pipeline
      - name: target-pipeline
      outputs:
      - name: offline-gen-output
      platform: linux
      run:
        args:
        - -exc
        - |
            echo ${OFFLINE_GEN_YAML_PARAM} > offline-gen-output/offline-gen-param-file.yml
            python offline-gen.py -git target-pipeline offline-gen-output/offline-gen-param-file.yml;
            mv git-only-*.yml offline-gen-output/
        path: /bin/bash
    task: build-git-repos-from-pipeline
    params:
      OFFLINE_GEN_YAML_PARAM: ((offline_gen_yaml_input_params ))
      PIPELINE_YAML_PARAM: ((pipeline_yaml_input_params ))
  - aggregate:
    - put: git-repos-output
      params: { file: offline-gen-output/git-only-*.yml }
    - put: offline-gen-param-file
      params: { file: offline-gen-output/offline-gen-params.yml }
    - put: pipeline-param-file
      params: { file: offline-gen-output/pipeline-params.yml }

resource_types:
- name: file-url
  type: docker-image
  source:
    repository: pivotalservices/concourse-curl-resource
    tag: latest

resources:
- name: offline-gen-pipeline
  type: git
  source:
    branch: master
    uri: https://github.com/sparameswaran/offline-gen.git

- name: target-pipeline
  type: git
  source:
    branch: ((target_pipeline_branch))
    uri: ((target_pipeline_uri))

- name: offline-gen-param-file
  type: s3
  source: {{ offlinegen_param_file_source }}

- name: pipeline-param-file
  type: s3
  source: {{ pipeline_param_file_source }}
