name: copy-{{ resource['name'] }}-{{ resource['base_type'] }}-to-blobstore
plan:
- get: input-{{ resource['name'] }}-{{ resource['base_type'] }}
- get: offline-gen-repo-converter
- config:
    image_resource:
      source: {repository: nsxedgegen/offline-gen-worker}
      type: docker-image
    inputs:
    - {name: input-{{ resource['name'] }}-{{ resource['base_type'] }} }
    - {name: offline-gen-repo-converter}
    outputs:
    - {name: output-{{ resource['name'] }}-{{ resource['base_type'] }} }
    - {name: output-{{ resource['name'] }}-{{ resource['base_type'] }}-docker-images}
    platform: linux
    run:
      args:
      - -exc
      - |
          echo "Searching for docker images within tasks of nsxt-ansible resource"
          cd input-{{ resource['name'] }}-{{ resource['base_type'] }}
          python ../offline-gen-repo-converter/pipeline_repo_converter*.py . "{{task_list}}" "{{blobstore_source}}" \
             ../output-{{ resource['name'] }}-{{ resource['base_type'] }}-docker-images/{{ resource['name'] }}-docker-images.yml
          tar cfz ../output-{{ resource['name'] }}-{{ resource['base_type'] }}/{{ resource['name'] }}-tarball.tgz .
          cd ..
          ls -l output-{{ resource['name'] }}
      path: /bin/bash
  task: prepare-nsxt-ansible-bit-to-export
- params: {file: output-{{ resource['name'] }}-{{ resource['base_type'] }}/{{ resource['name'] }}-tarball.tgz}
  put: output-{{ resource['name'] }}-{{ resource['base_type'] }}
- params: {file: output-{{ resource['name'] }}-{{ resource['base_type'] }}-docker-images/{{ resource['name'] }}-docker-images.yml}
  put: output-{{ resource['name'] }}-{{ resource['base_type'] }}-docker-images
